name: TNAflix
domain: tnaflix.com
base_url: "https://www.tnaflix.com"
selector_style: css
no_overwrite: true
use_selenium: false

url_encoding_rules:
  " ": "-"
  "%20": "-"

modes:
  video:
    url_pattern: "/{category}/video{video_id}"
    scraper: video_scraper
  search:
    url_pattern: "/search?what={search}"
    url_pattern_pages: "/search?what={search}&page={page}"
    scraper: list_scraper
    max_pages: 999

download:
  method: "yt-dlp"

scrapers:
  list_scraper:
    video_container:
      selector: "section.content div[class*='video']"
    video_item:
      selector: "div[data-vid]"
      fields:
        url:
          selector: "a[href*='/video']"
          attribute: "href"
        title:
          selector: "a[class*='title']"

  video_scraper:
    title:
      selector: "head title"
      postProcess:
        - replace:
            - regex: " - Tnaflix\\.com"
              with: ""
    tags:
      selector: "div.video-detail-badges a.badge-video[href*='/search?what='][href], div.video-detail-badges a.badge-video:not([href*='/profile/']):not([href*='/channel/'])"
    actors:
      selector: "div.video-detail-badges a.badge-video[href*='/profile/']"
    studios:
      selector: "div.video-detail-badges a.badge-video[href*='/channel/']"
    date:
      selector: "div.video-detail-badges span.badge-video i.icon-clock-o"
      postProcess:
        - parent_text: true
    description:
      selector: "p.video-detail-description"
      postProcess:
        - replace:
            - regex: "^<b>Description</b>:\\s*"
              with: ""
