name: IncestFlix
domain: incestflix.com
base_url: "https://www.incestflix.com"
selector_style: css
no_overwrite: true

url_encoding_rules:
  " & ": "/and/"
  "&": "/and/"
  " ": "-"
  "%20": "-"

modes:
  video:
    url_pattern: "/watch/{video_id}"
    scraper: video_scraper
  search:
    url_pattern: "/tag/{search}"
    url_pattern_pages: "/tag/{search}/page/{page}"
    max_pages: 999
    scraper: list_scraper
  tag:
    url_pattern: "/tag/{tag}"
    url_pattern_pages: "/tag/{tag}/page/{page}"
    max_pages: 999
    scraper: list_scraper

download:
  method: "curl"

scrapers:
  video_scraper:
    title:
      selector: "div#incflix-videowrap h2"  # From updated, works fine
    download_url:
      selector: "div#incflix-stream source"
      attribute: "src"
    tags:
      selector: "div#videotags a[class^='studiolink']"  # Works in both
    genres:
      selector: "div#videotags a.studiolink0, div#videotags a.studiolink3, div#videotags a.studiolink4"
    actors:
      selector: "div#incflix-videowrap h2"  # From updated, better than original
      postProcess:
        - replace:
            - regex: " - .*"
              with: ""  # Strips everything after " - "
        - replace:
            - regex: "\\s*,\\s*"
              with: ","  # Normalizes comma spacing
        - split: ","  # Splits into list
    producers:
      selector: "div#videotags a.studiolink2"
    studios:
      selector: "div#incflix-videowrap h2"  # Dummy selector
      postProcess:
        - replace:
            - regex: ".*"
              with: "IncestFlix"  # Forces fixed value
    image:
      selector: "video#incflix-player"
      attribute: "poster"
      postProcess:
        - replace:
            - regex: "^//"
              with: "http://"  # Fixes protocol-relative URL

  list_scraper:
    video_container:
      selector:
        - "body"
    video_item:
      selector: "a#videolink"
      fields:
        url:
          attribute: "href"
        title:
          selector: "a#videolink"  # Fallback to text if attribute fails
