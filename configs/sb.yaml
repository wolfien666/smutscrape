name: SpankBang
domain: spankbang.com
base_url: "https://spankbang.com"
selector_style: css
no_overwrite: true
use_selenium: false  # Kept as per your change; test with requests
url_encoding_rules:
  " ": "+"
  "%20": "+"

modes:
  video:
    url_pattern: "/{video_id}/video/{title}"
    scraper: video_scraper
  model:
    url_pattern: "/pornstar/{model}/"
    url_pattern_pages: "/pornstar/{model}/{page}/"
    max_pages: 999
    scraper: list_scraper
  search:
    url_pattern: "/s/{search}/?o=all/"
    url_pattern_pages: "/s/{search}/{page}/?o=all/"
    max_pages: 999
    scraper: list_scraper
  tag:
    url_pattern: "/s/{tag}/?o=all/"
    url_pattern_pages: "/s/{tag}/{page}/?o=all/"
    max_pages: 999
    scraper: list_scraper

download:
  method: "yt-dlp"

scrapers:
  video_scraper:
    title:
      selector: "head title"  # Kept as is; refine if suffix unwanted
    download_url:
      selector: "meta[property='og:video']"
      attribute: "content"
    actors:
      selector: "div.video-info p.name a[href*='/pornstar/']"  # Hypothetical; adjust with full video page HTML
    tags:
      selector: "div.tags a[href*='/tag/']"  # Hypothetical; adjust with full video page HTML
    description:
      selector: "div.description"  # Hypothetical; adjust with full video page HTML

  list_scraper:
    video_container:
      selector:
        - "div.video-list.video-rotate.with-ads.four-col"  # Restored list format
        - "div.video-list.video-rotate.video-list-with-ads"  # Fallback
    video_item:
      selector: "div.video-item"
      fields:
        url:
          selector: "a.thumb"
          attribute: "href"
        title:
          selector: "p.name a"  # More specific than a.thumb title attribute
        video_key:
          selector: "a.thumb"
          attribute: "href"
          pattern: "/([^/]+)/video/"  # Extracts "6nkg9" from "/6nkg9/video/..."

name_suffix: " - SpankBang"
